<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!-- 所使用的object model版本，为了确保稳定的使用，这个元素是强制性的。除非maven开发者升级模板，否则不需要修改 -->
	<modelVersion>4.0.0</modelVersion>

	<!-- 是项目创建团体或组织的唯一标志符，通常是域名倒写，如groupId org.apache.maven.plugins就是为所有maven插件预留的 -->
	<groupId>com.rain</groupId>
	<!-- 是项目artifact唯一的基地址名 -->
	<artifactId>r-team</artifactId>
	<!-- artifact打包的方式，如jar、war、ear等等。默认为jar。这个不仅表示项目最终产生何种后缀的文件，也表示build过程使用什么样的lifecycle -->
	<packaging>pom</packaging>
	<!-- artifact的版本，通常能看见为类似0.0.1-SNAPSHOT，其中SNAPSHOT表示项目开发中，为开发版本name 表示项目的展现名，在maven生成的文档中使用 -->
	<version>0.0.1-SNAPSHOT</version>
	<!-- 表示项目的展现名，在maven生成的文档中使用 -->
	<name>r-team</name>
	<!-- 表示项目的地址，在maven生成的文档中使用 -->
	<url>http://www.hiyouyu.com</url>
	<!-- 表示项目的描述，在maven生成的文档中使用 -->
	<description>Rain's Team</description>

	<!-- 定义常量 -->
	<properties>
		<!-- lib info -->
		<r-version>0.0.1-SNAPSHOT</r-version>
		<spring-version>3.2.10.RELEASE</spring-version>
		<spring-security-version>3.2.4.RELEASE</spring-security-version>

		<!-- base info -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- projectInfo -->

		<!-- Default Build Properties -->
		<skipTests>true</skipTests>
	</properties>

	<!-- 开发者信息 -->
	<developers>
		<developer>
			<name>HeYu</name>
			<id>heyu</id>
			<email>heyu.520@qq.com</email>
			<roles>
				<role>Java Developer</role>
			</roles>
		</developer>
	</developers>

	<!-- 提供了一种管理依赖版本号的方式，并不实现引入，因此子项目需要显式的声明需要用的依赖。 -->
	<!-- 如果有多个子项目都引用同一样依赖，则可以避免在每个使用的子项目里都声明一个版本号，这样当想升级或切换到另一个版本时，只需要在顶层父容器里更新，而不需要一个一个子项目的修改 
		；另外如果某个子项目需要另外的一个版本，只需要声明version就可。 -->
	<dependencyManagement>
		<dependencies>

			<!-- 子包引用 -->
			<dependency>
				<groupId>com.rain</groupId>
				<artifactId>r-core</artifactId>
				<version>${r-version}</version>
			</dependency>
			<dependency>
				<groupId>com.rain</groupId>
				<artifactId>r-app</artifactId>
				<version>${r-version}</version>
			</dependency>
			<dependency>
				<groupId>com.rain</groupId>
				<artifactId>r-web</artifactId>
				<version>${r-version}</version>
			</dependency>
			<dependency>
				<groupId>com.rain</groupId>
				<artifactId>r-web-component</artifactId>
				<version>${r-version}</version>
			</dependency>

			<!-- spring -->
			<dependency>
				<!-- 这个jar 文件包含Spring MVC 框架相关的所有类。包括框架的Servlets，Web MVC框架，控制器和视图支持。当然，如果你的应用使用了独立的MVC 
					框架，则无需这个JAR 文件里的任何类。 -->
				<!-- 外部依赖spring-web, (spring-support，Tiles，iText，POI)。 -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<!-- 这个jar 文件是所有应用都要用到的，它包含访问配置文件、创建和管理bean 以及进行Inversion of Control 
					/ Dependency Injection（IoC/DI）操作相关的所有类。如果应用只需基本的IoC/DI 支持，引入spring-core.jar 
					及spring-beans.jar 文件就可以了。 -->
				<!-- 外部依赖spring-core，(CGLIB)。 -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<!-- 这个jar 文件为Spring 核心提供了大量扩展。可以找到使用Spring ApplicationContext特性时所需的全部类，JDNI 
					所需的全部类，instrumentation组件以及校验Validation 方面的相关类。 -->
				<!-- 外部依赖spring-beans, (spring-aop)。 -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<!-- 这个jar 文件包含支持UI模版（Velocity，FreeMarker，JasperReports），邮件服务，脚本服务(JRuby)，缓存Cache（EHCache），任务计划Scheduling（uartz）方面的类。 -->
				<!-- 外部依赖spring-context, (spring-jdbc, Velocity, FreeMarker, JasperReports, 
					BSH, Groovy, JRuby, Quartz, EHCache) -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<!-- 这个jar 文件包含Spring 框架基本的核心工具类。Spring 其它组件要都要使用到这个包里的类，是其它组件的基本核心，当然你也可以在自己的应用系统中使用这些工具类。 -->
				<!-- 外部依赖Commons Logging， (Log4J)。 -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<!-- 这个jar 文件包含Web 应用开发时，用到Spring 框架时所需的核心类，包括自动载入Web Application Context 
					特性的类、Struts 与JSF 集成类、文件上传的支持类、Filter 类和大量工具辅助类。 -->
				<!-- 外部依赖spring-context, Servlet API, (JSP API, JSTL, Commons FileUpload, 
					COS)。 -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<!-- 这个jar 文件包含在应用中使用Spring 的AOP 特性时所需的类和源码级元数据支持。使用基于AOP 的Spring特性，如声明型事务管理（Declarative 
					Transaction Management），也要在应用里包含这个jar包。 -->
				<!-- 外部依赖spring-core， (spring-beans，AOP Alliance， CGLIB，Commons Attributes)。 -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<!-- 提供对AspectJ的支持，以便可以方便的将面向方面的功能集成进IDE中，比如Eclipse AJDT。 -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<!-- 这个jar 文件包含Spring DAO、Spring Transaction 进行数据访问的所有类。为了使用声明型事务支持，还需在自己的应用里包含spring-aop.jar。 -->
			<!-- 外部依赖spring-core，(spring-aop， spring-context， JTA API)。 -->
			<!-- 这个引用可能是错误的引用 -->
<!-- 			<dependency> -->
<!-- 				<groupId>org.springframework</groupId> -->
<!-- 				<artifactId>spring-dao</artifactId> -->
<!-- 				<version>3.2.1.RELEASE</version> -->
<!-- 			</dependency> -->
			<dependency>
				<!--这个jar 文件包含对Spring 对JDBC 数据访问进行封装的所有类。 -->
				<!-- 外部依赖spring-beans，spring-dao。 -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>3.2.1.RELEASE</version>
			</dependency>

			<!-- spring-security -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${spring-security-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${spring-security-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${spring-security-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
				<version>${spring-security-version}</version>
			</dependency>


			<!-- hibernate -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>4.1.10.Final</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>4.2.0.Final</version>
			</dependency>


			<!-- antlr -->
			<dependency>
				<groupId>antlr</groupId>
				<artifactId>antlr</artifactId>
				<version>2.7.7</version>
			</dependency>

			<!-- commons -->
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.6</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.1</version>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2.1</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.8.3</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>1.3.1</version>
			</dependency>
			<dependency>
				<groupId>commons-math</groupId>
				<artifactId>commons-math</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.1.1</version>
			</dependency>

			<!-- log -->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>1.1.2</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.1.2</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.3</version>
			</dependency>

			<!-- db connnetct pool -->
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>1.4</version>
			</dependency>
			<dependency>
				<groupId>commons-pool</groupId>
				<artifactId>commons-pool</artifactId>
				<version>1.6</version>
			</dependency>

			<dependency>
				<groupId>c3p0</groupId>
				<artifactId>c3p0</artifactId>
				<version>0.9.1.2</version>
			</dependency>

			<!-- jdbc -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.24</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>0.2.26</version>
			</dependency>
			<!-- 因为oracle版权问题,在maven默认中央库中是没有jar包的,所以请自己下载然后放入lib文件夹 -->
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc14</artifactId>
				<version>10.2.0.3.0</version>
			</dependency>
			<dependency>
				<groupId>postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>9.1-901-1.jdbc4</version>
			</dependency>
			<dependency>
				<groupId>hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>1.8.0.10</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>1.4.178</version>
			</dependency>

			<!-- mybatis -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>3.1.1</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-ehcache</artifactId>
				<version>1.0.0</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>1.1.1</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.2</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-core</artifactId>
				<version>1.3.2</version>
				<scope>compile</scope>
			</dependency>



			<!-- tglibs -->
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>1.1.0.CR2</version>
			</dependency>

			<dependency>
				<groupId>jstl</groupId>
				<artifactId>jstl</artifactId>
				<version>1.2</version>
			</dependency>

			<dependency>
				<groupId>taglibs</groupId>
				<artifactId>standard</artifactId>
				<version>1.1.2</version>
			</dependency>

			<!-- json -->
			<dependency>
				<groupId>net.sf.json-lib</groupId>
				<artifactId>json-lib</artifactId>
				<version>2.4</version>
				<classifier>jdk15</classifier>
			</dependency>


			<!-- jackson -->
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-core-asl</artifactId>
				<version>1.9.12</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>1.9.12</version>
			</dependency>

			<!-- aopalliance -->
			<dependency>
				<!-- aop联盟制定的aop规范 -->
				<groupId>aopalliance</groupId>
				<artifactId>aopalliance</artifactId>
				<version>1.0</version>
			</dependency>

			<!-- aspectj -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>1.7.2</version>
			</dependency>

			<!-- cglib 代理使用 -->
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>2.2.2</version>
			</dependency>

			<!-- 定时噄1�7 -->
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>2.2.1</version>
			</dependency>

			<!-- xml处理 -->
			<dependency>
				<groupId>xmlpull</groupId>
				<artifactId>xmlpull</artifactId>
				<version>1.1.3.4d_b4_min</version>
			</dependency>
			<dependency>
				<groupId>xpp3</groupId>
				<artifactId>xpp3_min</artifactId>
				<version>1.1.4c</version>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>1.4.6</version>
			</dependency>

			<!-- 模板引擎 -->
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>2.3.20</version>
			</dependency>

			<!-- pdf处理 -->
			<dependency>
				<groupId>com.itextpdf</groupId>
				<artifactId>itextpdf</artifactId>
				<version>5.5.1</version>
			</dependency>

			<!-- junit -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.8</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>junit-addons</groupId>
						<artifactId>junit-addons-runner</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- 引用架包 -->
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<build>
		<finalName>r-team</finalName>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
			<testResource>
				<directory>src/test/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
		</testResources>

		<pluginManagement>
			<plugins>
				<!-- common -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
					<inherited>true</inherited>
				</plugin>

				<!-- compliler -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.0</version>
					<inherited>true</inherited>
					<configuration>
						<verbose>true</verbose>
						<!-- The -source argument for the Java compiler.Default value is: 1.5. -->
						<source>1.7</source>
						<!-- The -target argument for the Java compiler.Default value is: 1.5. -->
						<target>1.7</target>
						<!-- The -encoding argument for the Java compiler.Default value is: 
							${project.build.sourceEncoding}. -->
						<encoding>UTF-8</encoding>
						<!-- Set to true to show compilation warnings. Default value is: false. -->
						<!-- <showWarnings>true</showWarnings> -->
						<!-- <showDeprecation>true</showDeprecation> -->
						<!-- 发出编译警告和错误时是否停止 -->
						<!-- <failOnError>false</failOnError> -->
						<compilerArguments>
							<extdirs>${basedir}/src/main/webapp/WEB-INF/lib</extdirs>
						</compilerArguments>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.5</version>
					<inherited>true</inherited>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.9</version>
					<inherited>true</inherited>
					<configuration>
						<skipTests>true</skipTests>
						<testFailureIgnore>flase</testFailureIgnore>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<id>copy-dependencies</id>
							<phase>clean</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>src/main/webapp/WEB-INF/lib</outputDirectory>
								<excludeTransitive>false</excludeTransitive>
								<stripVersion>true</stripVersion>
							</configuration>
						</execution>
					</executions>
					<version>2.3</version>
					<inherited>true</inherited>
				</plugin>
				<!-- Ignore/Execute plugin execution -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<!-- copy-dependency plugin -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<!-- package -->
				<!-- mvn war:war -->
				<!-- 生成war匄1�7�1�7 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.3</version>
					<configuration>
						<!-- The directory for the generated WAR. -->
						<!-- Default value is: ${project.build.directory}. -->
						<!--<outputDirectory>${basedir}/target/war</outputDirectory> -->
						<!-- The name of the generated WAR. -->
						<!-- Default value is: ${project.build.finalName}. -->
						<warName>${project.name}</warName>
						<!-- Single directory for extra files to include in the WAR. This is 
							where you place your JSP files. -->
						<!-- Default value is: ${basedir}/src/main/webapp. -->
						<!--<warSourceDirectory>${basedir}/src/main/webapp</warSourceDirectory> -->
						<!-- The directory where the webapp is built. -->
						<!-- Default value is: ${project.build.directory}/${project.build.finalName}. -->
						<!--<webappDirectory>${basedir}/target/war/webapp</webappDirectory> -->
						<!--Directory to unpack dependent WARs into if needed. -->
						<!--Default value is: ${project.build.directory}/war/work. -->
						<!--<workDirectory>${basedir}/target/war/work</workDirectory> -->
						<!-- The archive configuration to use -->
						<archive>
							<!-- Maven 打包 jar 、war 文件时，不将 pom.xml 等打包进包中 -->
							<addMavenDescriptor>true</addMavenDescriptor>
						</archive>
						<packagingExcludes>
							**/spy.properties
						</packagingExcludes>
						<!-- The comma separated list of tokens to exclude when copying the 
							content of the warSourceDirectory. -->
						<warSourceExcludes>
							**/spy.properties
						</warSourceExcludes>
						<!-- The path to the web.xml file to use. -->
						<!-- User property is: maven.war.webxml. -->
						<webXml>${basedir}/src/main/webapp/WEB-INF/web.xml</webXml>
						<webResources>
							<resource>
								<directory>src/main/webapp/WEB-INF</directory>
								<targetPath>WEB-INF</targetPath>
							</resource>
							<resource>
								<directory>src/main/java</directory>
								<excludes>
									<exclude>**/**.java</exclude>
								</excludes>
								<targetPath>WEB-INF/classes</targetPath>
							</resource>
						</webResources>
					</configuration>
				</plugin>

				<!-- mvn jar:jar -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.3.2</version>
					<inherited>true</inherited>
				</plugin>

				<!-- mvn source:jar -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
					<inherited>true</inherited>
					<configuration>
						<attach>true</attach>
						<encoding>UTF-8</encoding>
						<excludes>
							<exclude>**/*Test.java</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<phase>compile</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- javadoc -->
				<!-- <plugin> -->
				<!-- <groupId>org.apache.maven.plugins</groupId> -->
				<!-- <artifactId>maven-javadoc-plugin</artifactId> -->
				<!-- <inherited>true</inherited> -->
				<!-- <configuration> -->
				<!-- <encoding>UTF-8</encoding> -->
				<!-- </configuration> -->
				<!-- <executions> -->
				<!-- <execution> -->
				<!-- <phase>compile</phase> -->
				<!-- </execution> -->
				<!-- </executions> -->
				<!-- </plugin> -->

				<!-- deploy -->
				<!-- <plugin> -->
				<!-- <groupId>org.apache.maven.plugins</groupId> -->
				<!-- <artifactId>maven-deploy-plugin</artifactId> -->
				<!-- <inherited>true</inherited> -->
				<!-- <configuration> -->
				<!-- <skip>false</skip> -->
				<!-- </configuration> -->
				<!-- <executions> -->
				<!-- <execution> -->
				<!-- <phase>install</phase> -->
				<!-- <goals> -->
				<!-- <goal>deploy</goal> -->
				<!-- </goals> -->
				<!-- </execution> -->
				<!-- </executions> -->
				<!-- </plugin> -->

				<!-- mvn ejb:ejb -->
				<!-- <plugin> -->
				<!-- <groupId>org.apache.maven.plugins</groupId> -->
				<!-- <artifactId>maven-ejb-plugin</artifactId> -->
				<!-- <version>2.3</version> -->
				<!-- <inherited>true</inherited> -->
				<!-- <configuration> -->
				<!-- <ejbVersion>3.0</ejbVersion> -->
				<!-- </configuration> -->
				<!-- </plugin> -->

				<!-- deploy -->
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>maven-jetty-plugin</artifactId>
					<version>6.1.10</version>
					<inherited>true</inherited>
					<configuration>
						<scanIntervalSeconds>10</scanIntervalSeconds>
						<stopKey>foo</stopKey>
						<stopPort>9999</stopPort>
					</configuration>
					<executions>
						<execution>
							<id>start-jetty</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<scanIntervalSeconds>0</scanIntervalSeconds>
								<daemon>true</daemon>
							</configuration>
						</execution>
						<execution>
							<id>stop-jetty</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.mortbay.jetty</groupId>
							<artifactId>maven-jetty-plugin</artifactId>
							<version>6.1.10</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- sonar -->
				<plugin>
					<groupId>org.codehaus.sonar</groupId>
					<artifactId>sonar-maven3-plugin</artifactId>
					<version>3.3</version>
				</plugin>
				<!-- <plugin> -->
				<!-- <groupId>org.codehaus.sonar</groupId> -->
				<!-- <artifactId>sonar-maven-plugin</artifactId> -->
				<!-- <version>3.3</version> -->
				<!-- </plugin> -->
			</plugins>


		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-jar-plugin</artifactId> -->
			<!-- </plugin> -->
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-war-plugin</artifactId> -->
			<!-- </plugin> -->
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-source-plugin</artifactId> -->
			<!-- </plugin> -->
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-javadoc-plugin</artifactId> -->
			<!-- </plugin> -->
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-deploy-plugin</artifactId> -->
			<!-- </plugin> -->
		</plugins>
	</build>


	<!-- <distributionManagement> -->
	<!-- <repository> -->
	<!-- <id>releases</id> -->
	<!-- <url>http://lenovo-pc-10:8081/nexus/content/repositories/releases</url> -->
	<!-- </repository> -->
	<!-- <snapshotRepository> -->
	<!-- <id>snapshots</id> -->
	<!-- <url>http://lenovo-pc-10:8081/nexus/content/repositories/snapshots</url> -->
	<!-- </snapshotRepository> -->
	<!-- </distributionManagement> -->

	<modules>
		<module>r-core</module>
		<module>r-components</module>
		<module>r-web</module>
		<module>r-app</module>
		<module>r-boda</module>
		<module>r-webs</module>
		<module>r-apps</module>
		<module>r-webcomponents</module>
		<module>r-web-component</module>
	</modules>
</project>